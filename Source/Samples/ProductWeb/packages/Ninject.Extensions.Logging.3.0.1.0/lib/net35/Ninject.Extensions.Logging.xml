<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Extensions.Logging</name>
    </assembly>
    <members>
        <member name="T:Ninject.Extensions.Logging.ILogger">
            <summary>
            Logs messages to a customizable sink.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Debug(System.String)">
            <summary>
            Logs the specified message with Debug severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Debug(System.String,System.Object[])">
            <summary>
            Logs the specified message with Debug severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Debug severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Info(System.String)">
            <summary>
            Logs the specified message with Info severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Info(System.String,System.Object[])">
            <summary>
            Logs the specified message with Info severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Info(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Info severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Trace(System.String)">
            <summary>
            Logs the specified message with Trace severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Trace(System.String,System.Object[])">
            <summary>
            Logs the specified message with Trace severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Trace severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Warn(System.String)">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Warn(System.String,System.Object[])">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Warn(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Warn severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Error(System.String)">
            <summary>
            Logs the specified message with Error severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Error(System.String,System.Object[])">
            <summary>
            Logs the specified message with Error severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Error severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Fatal(System.String)">
            <summary>
            Logs the specified message with Fatal severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Fatal(System.String,System.Object[])">
            <summary>
            Logs the specified message with Fatal severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILogger.Fatal(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Fatal severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.Type">
            <summary>
            Gets the type associated with the logger.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.IsDebugEnabled">
            <summary>
            Gets a value indicating whether messages with Debug severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.IsInfoEnabled">
            <summary>
            Gets a value indicating whether messages with Info severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.IsTraceEnabled">
            <summary>
            Gets a value indicating whether messages with Trace severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.IsWarnEnabled">
            <summary>
            Gets a value indicating whether messages with Warn severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.IsErrorEnabled">
            <summary>
            Gets a value indicating whether messages with Error severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.ILogger.IsFatalEnabled">
            <summary>
            Gets a value indicating whether messages with Fatal severity should be logged.
            </summary>
        </member>
        <member name="T:Ninject.Extensions.Logging.ILoggerFactory">
            <summary>
            Factory for loggers
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILoggerFactory.GetLogger(System.Type)">
            <summary>
            Gets the logger for the specified type, creating it if necessary.
            </summary>
            <param name="type">The type to create the logger for.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILoggerFactory.GetLogger(Ninject.Activation.IContext)">
            <summary>
            Gets the logger for the specified activation context, creating it if necessary.
            </summary>
            <param name="context">The context for which a logger is created.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="M:Ninject.Extensions.Logging.ILoggerFactory.GetCurrentClassLogger">
            <summary>
            Gets the logger for the class calling this method.
            </summary>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="T:Ninject.Extensions.Logging.LoggerBase">
            <summary>
            Abstract base implementation of a logger.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.Logging.LoggerBase"/> class.
            </summary>
            <param name="type">The type to associate with the logger.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Debug(System.String)">
            <summary>
            Logs the specified message with Debug severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Debug(System.String,System.Object[])">
            <summary>
            Logs the specified message with Debug severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Debug severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Info(System.String)">
            <summary>
            Logs the specified message with Info severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Info(System.String,System.Object[])">
            <summary>
            Logs the specified message with Info severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Info(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Info severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Trace(System.String)">
            <summary>
            Logs the specified message with Trace severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Trace(System.String,System.Object[])">
            <summary>
            Logs the specified message with Trace severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Trace severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Warn(System.String)">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Warn(System.String,System.Object[])">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Warn(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Warn severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Error(System.String)">
            <summary>
            Logs the specified message with Error severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Error(System.String,System.Object[])">
            <summary>
            Logs the specified message with Error severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Error severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Fatal(System.String)">
            <summary>
            Logs the specified message with Fatal severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Fatal(System.String,System.Object[])">
            <summary>
            Logs the specified message with Fatal severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerBase.Fatal(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Fatal severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.Type">
            <summary>
            Gets the type associated with the logger.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.IsDebugEnabled">
            <summary>
            Gets a value indicating whether messages with Debug severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.IsInfoEnabled">
            <summary>
            Gets a value indicating whether messages with Info severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.IsTraceEnabled">
            <summary>
            Gets a value indicating whether messages with Trace severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.IsWarnEnabled">
            <summary>
            Gets a value indicating whether messages with Warn severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.IsErrorEnabled">
            <summary>
            Gets a value indicating whether messages with Error severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.LoggerBase.IsFatalEnabled">
            <summary>
            Gets a value indicating whether messages with Fatal severity should be logged.
            </summary>
        </member>
        <member name="T:Ninject.Extensions.Logging.LoggerFactoryBase">
            <summary>
            A baseline definition of a logger factory, which tracks loggers as flyweights by type.
            Custom logger factories should generally extend this type.
            </summary>
        </member>
        <member name="F:Ninject.Extensions.Logging.LoggerFactoryBase.loggers">
            <summary>
            Maps types to their loggers.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerFactoryBase.GetLogger(System.Type)">
            <summary>
            Gets the logger for the specified type, creating it if necessary.
            </summary>
            <param name="type">The type to create the logger for.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerFactoryBase.GetLogger(Ninject.Activation.IContext)">
            <summary>
            Gets the logger for the specified activation context, creating it if necessary.
            </summary>
            <param name="context">The ninject creation context.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerFactoryBase.GetCurrentClassLogger">
            <summary>
            Gets the logger for the class calling this method.
            </summary>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerFactoryBase.CreateLogger(System.Type)">
            <summary>
            Creates a logger for the specified type.
            </summary>
            <param name="type">The type to create the logger for.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="T:Ninject.Extensions.Logging.LoggerModuleBase">
            <summary>
            Base implementation for logger modules
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.LoggerModuleBase.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
    </members>
</doc>
